*perl_crit.txt* A Perl Critic plugin for vim.
                          __   ___  __           __   __    ___    __~
         \  / |  |\/| __ |__) |__  |__) |    __ /  ` |__) |  |  | /  `~
          \/  |  |  |    |    |___ |  \ |___    \__, |  \ |  |  | \__,

              *vim-Perl-Critic* -- A Perl Critic plugin for Vim
                                perl_crit.txt
                    Matt Foster <matt.p.foster@gmail.com>


                              Reference Manual~




==============================================================================
CONTENTS                                                  *perl_crit-contents*

    1.Intro...................................|perl_crit|
    2.Functionality provided..................|perl_crit_Functionality|
    3.Customising vim-Perl-Citic..............|perl_crit_Customisation|

==============================================================================
1. Intro                                                           *perl_crit*

vim-Perl-Critic allows you to quickly and easilty run perl critic on your perl
code. It then gives you a quickfix list of problems, and draws margin |signs|
to help you spot them. To use it, type <leader>cc, or run |:Critic|. 

==============================================================================
2. Functionality Provided                            *perl_crit_Functionality*

Type `<leader>cc` (typically `\cc`), to fire up the |quickfix| list of your
perl foibles.

To clear the signs from the margin, use:

 :sign unplace *

You can also set:

  autocmd! BufReadPost,BufWritePost,FileReadPost,FileWritePost *.pl call ShowCriticisms()
  autocmd! BufReadPost,BufWritePost,FileReadPost,FileWritePost *.pm call ShowCriticisms()

To have it run whenever you save or load a perl buffer.

==============================================================================
3.Customising vim-Perl-Citic                         *perl_crit_Customisation*

The text, colours and criticism severity are configurable. To change them, just
set the following variables.

  let g:crit_low_sev_guifg='#004400'
  let g:crit_low_sev_guibg='#004400'
  let g:crit_low_sev_text='⑶ '
  let g:crit_low_sev_ctermfg='green'
  let g:crit_low_sev_ctermbg='black'
  
  let g:crit_med_sev_guifg='#bbbb00'
  let g:crit_med_sev_guibg='#bbbb00'
  let g:crit_med_sev_text='② '
  let g:crit_med_sev_ctermfg='cyan'
  let g:crit_med_sev_ctermbg='black'
  
  let g:crit_high_sev_guifg='#ff2222'
  let g:crit_high_sev_guibg='#ff2222'
  let g:crit_high_sev_text='① '
  let g:crit_high_sev_ctermfg='black'
  let g:crit_high_sev_ctermbg='red'
  
  let g:crit_severity_level=3

Be warned, there is no sanity checking of these, and empty text variables don't
work.


